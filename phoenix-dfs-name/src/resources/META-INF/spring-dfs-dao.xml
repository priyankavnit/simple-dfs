<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!--
		in this case, JDBC-related settings for the dataSource definition
		below
	-->
	<bean id="framework.PropertyResourceConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:dfs-default.properties</value>
			</list>
		</property>
	</bean>

	<bean id="framework.DataSource" class="org.agile.framework.datasource.SimpleDataSource" p:driver="${name.jdbc.driver}"
		p:url="${name.jdbc.url}" p:userName="${name.jdbc.username}" p:passWord="${name.jdbc.password}" />

	<!-- jdbc dao -->
	<bean id="framework.JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="framework.DataSource">
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="framework.SessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="framework.DataSource">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${name.jdbc.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<value>classpath:**/*.hbm.xml</value>
		</property>
	</bean>
	<bean id="framework.HibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"
		p:sessionFactory-ref="framework.SessionFactory">
	</bean>
	<bean id="framework.HibernateEntityDao" class="org.agile.framework.dao.HibernateEntityDaoImpl"
		p:sessionFactory-ref="framework.SessionFactory">
	</bean>

	<!-- transaction manager -->
	<bean id="framework.DataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="framework.DataSource" />
	<bean id="framework.TransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="framework.SessionFactory" p:dataSource-ref="framework.DataSource" />
	<bean id="framework.NameMatchTransactionAttributeSource" class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_SUPPORTS</prop>
			</props>
		</property>
	</bean>

	<!-- Interceptor Instance -->
	<bean id="framework.TransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="framework.TransactionManager" />
		</property>
		<property name="transactionAttributeSource">
			<ref bean="framework.NameMatchTransactionAttributeSource" />
		</property>
	</bean>

	<!-- parent manager -->
	<bean id="framework.AbstractProxyManager" abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames">
			<list>
				<value>framework.TransactionInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="framework.AbstractDaoManager" abstract="true" class="java.lang.Object" p:hibernateEntityDao-ref="framework.HibernateEntityDao" />
</beans>