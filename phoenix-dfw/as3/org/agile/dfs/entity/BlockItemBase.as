/**
 * Generated by Gas3 v2.0.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (BlockItem.as).
 */

package org.agile.dfs.entity {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;

    [Bindable]
    public class BlockItemBase implements IExternalizable {

        private var _blockNo:int;
        private var _capacity:int;
        private var _copyNo:int;
        private var _file:FileItem;
        private var _id:String;
        private var _node:NodeItem;
        private var _size:int;
        private var _status:String;

        public function set blockNo(value:int):void {
            _blockNo = value;
        }
        public function get blockNo():int {
            return _blockNo;
        }

        public function set capacity(value:int):void {
            _capacity = value;
        }
        public function get capacity():int {
            return _capacity;
        }

        public function set copyNo(value:int):void {
            _copyNo = value;
        }
        public function get copyNo():int {
            return _copyNo;
        }

        public function set file(value:FileItem):void {
            _file = value;
        }
        public function get file():FileItem {
            return _file;
        }

        public function set id(value:String):void {
            _id = value;
        }
        public function get id():String {
            return _id;
        }

        public function set node(value:NodeItem):void {
            _node = value;
        }
        public function get node():NodeItem {
            return _node;
        }

        public function set size(value:int):void {
            _size = value;
        }
        public function get size():int {
            return _size;
        }

        public function set status(value:String):void {
            _status = value;
        }
        public function get status():String {
            return _status;
        }

        public function readExternal(input:IDataInput):void {
            _blockNo = input.readObject() as int;
            _capacity = input.readObject() as int;
            _copyNo = input.readObject() as int;
            _file = input.readObject() as FileItem;
            _id = input.readObject() as String;
            _node = input.readObject() as NodeItem;
            _size = input.readObject() as int;
            _status = input.readObject() as String;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_blockNo);
            output.writeObject(_capacity);
            output.writeObject(_copyNo);
            output.writeObject(_file);
            output.writeObject(_id);
            output.writeObject(_node);
            output.writeObject(_size);
            output.writeObject(_status);
        }
    }
}